import React from "react";
import "../css/CveList.css";
import config from "../configuration/config";
import { useNavigate } from "react-router-dom";

const CveList = () => {
    // const [resultsPerPage , setResultsPerPage] = useEffect(10) ;
    // const [currentPage , setCurrentPage] = useEffect(1) ;
    const [skip, setSkip] = React.useState(0);
    // const [data, setData] = React.useState(null);
    // i am using the below to get suggestions while typing
    const [data, setData] = React.useState({
        _id: "",
        cveId: "",
        sourceIdentifier: "",
        published: "",
        lastModified: "",
        accessComplexity: "",
        accessVector: "",
        authentication: "",
        availabilityImpact: "",
        baseScore: "",
        baseSeverity: "",
        confidentialityImpact: "",
        cpeMatch: [
            { vulnerable: "", criteria: "", matchCriteriaId: "" },
            { vulnerable: "", criteria: "", matchCriteriaId: "" },
        ],
        descriptions: [
            { lang: "", value: "" },
            { lang: "", value: "" },
        ],
        exploitabilityScore: "",
        impactScore: "",
        integrityImpact: "",
        vectorString: "",
        vulnStatus: "",
        __v: 0,
    });
    const [resultsPerPage, setResultsPerPage] = React.useState(10);
    const [totalRecords, setTotalRecords] = React.useState(0);

    //Instead of using regular link tag, i am using this
    const navigate = useNavigate();

    React.useEffect(() => {
        fetch(`http://localhost:${config.backendPort}/totalCveCount`)
            .then((response) => response.json())
            .then((res) => {
                console.log("HIIIIIII");
                console.log(res);
                setTotalRecords(res);
            })
            .catch((error) => {
                console.error("Error fetching total records:", error);
            });
    }, []);

    React.useEffect(() => {
        fetch(
            `http://localhost:${config.backendPort}/cveList?count=${resultsPerPage}&offset=${skip}`
        )
            .then((response) => response.json())
            .then((data) => {
                console.log(data);
                setData(data);
            })
            .catch((error) => {
                console.error("Error fetching CVE data:", error);
            });
    }, [skip, resultsPerPage]);

    const handlePlus = () => {
        setSkip(skip + 10);
    };

    const handleMinus = () => {
        if (skip > 0) {
            setSkip(skip - 10);
        }
    };

    //The below works similar to the Link or the Anchor tag, but i am using react-router-dom
    const handleNavigationToSingleCve = (cveId) => {
        navigate(`/singleCve/${cveId}`);
    };

    return (
        <div className="max-w-6xl mx-auto">
            <p >Total records:{totalRecords}</p>
            {data !== null && data.length > 0 && (
                <table className="max-w-6xl mx-auto">
                    <thead className="bg-slate-400">
                        <tr>
                            <th className="text-center">CVE ID</th>
                            <th className="text-center">Source Identifier</th>
                            <th className="text-center">Published</th>
                            <th className="text-center">Last Modified</th>
                            <th className="text-center">Vulnerability Status</th>
                        </tr>
                    </thead>
                    <tbody>
                        {data.map(
                            (
                                //Just for the sake of getting the suggestions i am using the below
                                item = {
                                    _id: "",
                                    cveId: "",
                                    sourceIdentifier: "",
                                    published: "",
                                    lastModified: "",
                                    accessComplexity: "",
                                    accessVector: "",
                                    authentication: "",
                                    availabilityImpact: "",
                                    baseScore: "",
                                    baseSeverity: "",
                                    confidentialityImpact: "",
                                    cpeMatch: [
                                        { vulnerable: "", criteria: "", matchCriteriaId: "" },
                                        { vulnerable: "", criteria: "", matchCriteriaId: "" },
                                    ],
                                    descriptions: [
                                        { lang: "", value: "" },
                                        { lang: "", value: "" },
                                    ],
                                    exploitabilityScore: "",
                                    impactScore: "",
                                    integrityImpact: "",
                                    vectorString: "",
                                    vulnStatus: "",
                                    __v: 0,
                                }
                            ) => (
                                //The below onclick event deals with the naviation from the cve list to the single cve page
                                <tr
                                    key={item._id}
                                    onClick={() => {
                                        handleNavigationToSingleCve(item.cveId);
                                    }}
                                    className="hover:bg-gray-300 hover:shadow-md cursor-pointer"
                                >
                                    <td className="text-center">{item.cveId}</td>
                                    <td className="text-center">{item.sourceIdentifier}</td>
                                    <td className="text-center">
                                        {new Date(item.published).toLocaleDateString("en-US", {
                                            year: "numeric",
                                            month: "short",
                                            day: "2-digit",
                                        })}
                                    </td>
                                    <td className="text-center">
                                        {new Date(item.lastModified).toLocaleDateString("en-US", {
                                            year: "numeric",
                                            month: "short",
                                            day: "2-digit",
                                        })}
                                    </td>

                                    <td className="text-center">{item.vulnStatus}</td>
                                </tr>
                            )
                        )}
                    </tbody>
                </table>
            )}
            <div className="flex justify-between">
                <div className="flex justify-center items-center gap-5">
                    <h3>Results Per Page : </h3>
                    <select
                        name=""
                        id=""
                        onChange={(event) => {
                            console.log("Event:", event);
                            setResultsPerPage(event.target.value);
                        }}
                    >
                        <option value="10">10</option>
                        <option value="20">20</option>
                        <option value="30">30</option>
                        <option value="3000">3000</option>
                    </select>
                </div>

                <div className="button-container">

                    <button onClick={handleMinus}>prev page</button>
                    <span className="page-number">{skip / 10 + 1}</span>
                    <button onClick={handlePlus}>next page</button>
                </div>
            </div>
            {data !== null && data.length === 0 && (
                <p className="message">No data available</p>
            )}
        </div>
    );
};

export default CveList;
