
const getCveId = (singleCve) => {
    return singleCve?.cve?.id ?? "Not Available" ; 
}
const getSourceIdentifier = (singleCve) => {
    return singleCve?.cve?.sourceIdentifier ?? "Not Available";
};

const getPublished = (singleCve) => {
    return singleCve?.cve?.published ?? "Not Available";
};

const getLastModified = (singleCve) => {
    return singleCve?.cve?.lastModified ?? "Not Available";
};

const getVulnStatus = (singleCve) => {
    return singleCve?.cve?.vulnStatus ?? "Not Available";
};

const getDescriptions = (singleCve) => {
    let descriptions = singleCve?.cve?.descriptions ?? [{
        lang: "Not Available",
        value: "Not Available",
        _id: "Not Available",
    }];

   //Done this line after getting error at the cveId : CVE-2006-7252
    //Just to check whether the key is there but the value is empty, because mongoose won't allow that.......
    descriptions = descriptions.filter(
        (description) => description.lang !== "" && description.value !== ""
    );

    return descriptions;
};

const getBaseSeverity = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.baseSeverity ?? "Not Available";
};

const getBaseScore = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.baseScore ?? "Not Available";
};

const getVectorString = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.vectorString ?? "Not Available";
};

const getAccessVector = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.accessVector ?? "Not Available";
};
    
const getAccessComplexity = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.accessComplexity ?? "Not Available";
};

const getAuthentication = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.authentication ?? "Not Available";
};

const getConfidentialityImpact = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.confidentialityImpact ?? "Not Available";
};

const getIntegrityImpact = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.integrityImpact ?? "Not Available";
};

const getAvailabilityImpact = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.cvssData?.availabilityImpact ?? "Not Available";
};

const getExploitabilityScore = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.exploitabilityScore ?? "Not Available";
};

const getImpactScore = (singleCve) => {
    return singleCve?.cve?.metrics?.cvssMetricV2?.[0]?.impactScore ?? "Not Available";
};

const getCpeMatch = (singleCve) => {
    let cpeMatch = singleCve?.cve?.configurations?.[0]?.nodes?.[0]?.cpeMatch ?? [{
        vulnerable: "Not Available",
        criteria: "Not Available",
        matchCriteriaId: "Not Available",
    }];

    //Done this line after getting error at the cveId : CVE-2006-7252
    //Just to check whether the key is there but the value is empty, because mongoose won't allow that.......
    cpeMatch = cpeMatch.filter(
        (cpem) => cpem.vulnerable !== "" && cpem.criteria !== "" && cpem.matchCriteriaId !== ""
    );

    return cpeMatch;
};


export {getCveId, getSourceIdentifier, getPublished, 
    getLastModified, getDescriptions, 
    getVulnStatus, getBaseSeverity, 
    getBaseScore, getVectorString, 
    getAccessVector, getAccessComplexity, 
    getAuthentication, getConfidentialityImpact, 
    getIntegrityImpact, getAvailabilityImpact, 
    getExploitabilityScore, getImpactScore, getCpeMatch  }